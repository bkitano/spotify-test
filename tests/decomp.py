import sys, os
import numpy as np
import zlib, base64

sss = ""
ttt = "eJxNWglyHDEI_IqeMCB0_f9jUR9ap5yy95iREDRNwyTzG1_rbe9s0cd91VusaNkKr6IFvh33_X1XyddR5357v1gt5n0_2mmb3-Pu5M99N6JNXLLvBaWPJvfQKmdis7hX4JPIanu0ed9_bX_3hsH95mk58ftuONqqVnepu9l9cS-Kdo3Pa8E1uON1P7xg4pO6K5827ub3X8dd1-TaeHH3iMJqsbja3f-ulfe093IcOrDqPWbcs9z1rsW0ft77vsSfXPebL_DhXfFuiLvW_XNw4d1qDpw8ggbFhCM3jod97504zbk_d5u5sA1_3Q_jg9tidro5OlxVMAzHuMfT_Qfv8BkMSLwfncdD5K4r7iXt3FfXk1oStpy78LnOWtfkg6vvPfNjKDs9en_zIJunBwJkFSLd71t6sMPwkuk3fIUvEzYjTnfnjTsPQnYvRowD4VwyfCQsANRg_b6_E_bDN4sxn7ACvuQxCJHTeLQbhFz00MZX595wcOWAoRMf4M5sWClxRCwGAwcXvrsx9DpSAbeb90XCL_HdcyTWXrxxCOET3rq4OlgBKL-nmDz99RdcQ1gWX1ygdJo58Q4uEPoDJ7vf3LPjwsnP4Ta8ul_3qZgRpbgiHwQnzw3n35xg_InOzpjBTlwE7x3lLdKryZPIwc0P4Zl7cXz8F9iBjkAIcK1ci_PKWQAP1r6wXfADzIP7Fiyk6-EX5Pu1hqG_oCtCY8AHm-m67nckj7vTZtSCdgWCimWXch_W4S1gvBGwZFw39zpAMdyweaqlk8n64j_EBbwA9widPIKSsvUtuxdAtMgyuIwRLTlqvGhvJuE948bFuGDilBOAuaSQi6gfReAl7gfe8QuMFqQrfJ4MlUNbSnOSJHgVECu9p28LuUagFQ_caanQQgpGdPlBytRFMAeybJH5OsAEZ7cJXxEETtTohH2RZ4ZTLpmeWJSG3qXweZFKQ2yACMGJmwkFQNEEMu71SJYitz6xTwcU8ohRdjMQCFymbidGmP2ID9brdG0vpRV34q60mKAHlIGCpLGhV11Lcytiqv8u3nCZoN5JE9Obdax-kciSNXRdCQ6kQxaqpvMduhsW5GIadJWhT99MAbnkwE-m28XKLqXQ0r6DP4E1UpsXQgNH892tPsDEobkANkFThAIvHGQz3N8JoMm0PETMcOWa4HtHHEmc5u9pM1m6t5ic23ZlOr3Cq0iynex6wA3FUyMdD3Mb6850onPntCIo4G97GzFWt0uwqOwCfWrFLrFQQjyyEW9w5v4pscVnDCx8D7-oQOJvLAETHjK8ANKu3OORRN3YeU9hg16_P0uUFrnAC3ucdRwyog9pKxcQpQf_ejh2fA8iEeamk33T1wDwfU8-UMV3TWZF58dKtWtr8tKuYhm5xfnAYHYvEqRH0fIQ1RJ6JgnAs1jdDMBN_x0vneWdpBRKKQkcdfq_k7OqLGkKxvBM997zSmypGiDqMlAaUEcJcfWWF2CwKh9BgUpOTgrW5cf5qTp6JCMypHS2A1vC1aQZpU-mpEqMt1ffwg7LvoQM3UtXJVaPIJeotsIK8dpnKaEXEyCaRg_L9NQvnJvnZXmW71l2XWB_vqWy6qzH89EAD0NgdEs4pZ_8Nly19C5YnmhsWqxEvppIJtcbMRJPNrmcZIQqcDFz42FQsY9y-X8BO-0v28B2oT_bOkwuLpux5PtinKaojEeql6JKBp_xiLCOd51Kb1biR6CsTNMF0bE_v0N2nS9FVjKYF9sVdnjy_hLjHPur2wE2y2FdIpUHtYeog16CQnI1q6NJl-RnNrXa-p4TLXD7-44ozcf3UxA27F16tqEqSbKot5OJ342zeGQgTcBD475OvQFgHBn3U7hmgS6fxRK982xjGs-rSZSQP4UObjcV7ki0da7E6LlAOQqshEl053VKbvbH8edBhXknmBGURHt9IvRSZcl8mF1GQZLbD1I_ibBONj5NGAtFU4R9L-62mN7sKvST1LSXxEJsV5gtb4fTlt1m5INBsV2iMB6u39nUks72Cp9vGA5qcaMugA5f7UpChqQXLumWEXd0ePUJS7FBVIdAUM0iZHjfatPtMHdyd_DUMBvI_FLKV1B04xFW-ZS38y9vP2PLlX6Ipz4GC7uvz-e4em4zX7L_8kyp82RhTAulZbZ8VVHNRfH0R6Dpik5Rqh_WSdGV3MX7KReCb9SNRHMLE8luL02CFPvd7Jbnlzzk10mUuU-TqtiPtmPQ2N11p5htqsClSwHNAf8v6QmlRFiLoTFfr5JRXssj4tjakprT54fLg9anm9nPuYGckbtKfegyoXR2djzroutKZaySsZKq6aFcPoDWUT8ob-VjGTaj0tLSqTfv0V5JYehQye5XBEgoESziHDFJPpyZplUSTshzrrkiMjEh0UQimqu9_J6KmGSYdGjxb0klLM8iWI0lvIcFqRCYrFyxX2dbbGtDlCqd9TTH1tXD1un-1-Z5CjGM2xC3bPPqdiRZcrZHKou3bMPLJNkV3TjG4JL0HUrTIUYZbBSObosiCl3_MIjpav-_75GC-uwtLyrrpzPaycrVY5pqTFzFbhl5dlq6wfYgbkhhTssSpZ-0bhwL-B_WYopfiXvdLDk2nL-fYJ0-u_JH0wxlSFctwME4FMRPhRK_SwRQwH7ufS2EO7vn_tIqv2a7S8m3hQPJxQEZuh4DH41mxF36FgMi1Ye0FEU7hXuXXMLhjupE_mJpAUjWH6J1BYpn3hIwD5GpslBvIqJ1Z3EPjKvIPOsJGw0B1SY3d4Gh8jWNXFTxyaFh91GTO0oQpzBUru39e50JzufylsKNq8eUxQdyPasmVedWH0qga5g0f4in5Hq9i-LepS7T1ElkpWm5OJBwLUYyVoljmrt7DsU0TBuOTe8_ME8L1-ODcOb7_UrbVpdTQ3M28JGHDtNtAUFLOGdag4bDneE2iQQomu3Gr4S6kiHN-GnhoXbM7Uf6uPG2SH7Tn8rRyIjt_nr9ypaoD-n91GjyUxO04ZXj_nShd59qHSMf-Tm3xI35mgdSZOpWwVUzBlWSI5cJ0Dqh9Vt1STOnZr7eQO33J1qM12mzSEZ_IvflQ6bnZu4PUyWnawC73JwiAXKLfQclNicCfBMq6cqDqZ5Xc9jAVIxlRoEydwRHGLmfXK-jiZCilBiApfT9qxYuDQE37ZTE2k-HpFI3X7iXiiFAKC0Mv6VLSn2_9iPlD2ObDZt7otL0yJrPEyT0CayIZmyqU7arTY83YryWu2-p1Xje5_SWeT9e_XbjRknTpXbdbKo1lRXDw583R9K4V5SU_b_hjSRBeFC6mDz1Gm8XBdLiNCJToy0XGmXcM2y5mXAhV0ntv84rpg1UHbGy3m5QjtYY_cFx_c2p-2ui4ldsOdBUeQWG-PCGozelaJT1q9DZf8KF7aiWfCpLsomn_GW-uj6euNicmG0589AQXnkyLK-UMuTsozbgWKt6riP1osk45yY0cBzXgVCUBXh25GpO2fd6QqZBhapnPN9SO2okGGaZrUxU5SROxV-pAhtsZErdPvkhRaoiHKK-e1wav55bU9ZA09tZaEvS6fwS3OxAFVluBbL8AE3N1td-DeJHrkn1vj5uvNo3PGvtHtNa7zNBuseKAp7H0a6r4Q7u6vyu4WFxzBnSkpoufT_p-5u38vEcA9IdF4E2PG3pvHe8NklJ9ujjUwmcEnPHYw2qD8H8WIbkc73htax02Qdt6ubtAbj6z5cHzp6z3qzHc7tXQMmrc3tA8xsfrU-TnfDUOUNs2s8Dxl-J4fwrolkqS-yP37jGT0H4KMBt3RK5fhbAR8NujW0k53JKIXgyNnv7G-Z2D8dOWQBpAlGv3XQZgf2vg-dtBfQ5MFPt45ILy81cKvNug19HPWun2hgeNY3miTAf_ohufjMckQInid048EAnDYpQf1imCcnAWL_mRgyfmkyTZNdPgFq9Lx9kWlwzTBFu-6UGqIudZw_Vb270cYsDPPJJi4hVj_m2VaWQ9uqb5YOeWxGo6clS__7mh7P95jweL873TFGNFkNynK-LAVOHHS8FNHQ91mNSc50D_5LcUOnj9IIWkZEulRf4NP1k6WeBgcZsOJavsoI6bnqmlt6N42kKHPez-VnlZHl0KlkwBbr1IhJ-oKsng2R3ThFexQ9P7K0yu_MsPD4PLeg5DX-R2FSfOCMcb6bO6e98j6e8nhght-9YupKPF9r7HwkMsh8984t4GVDlhiFI9X-k7sC_x6fZZcsxbl_TE28yiwdYRZit3_rDIU4D4rRt6V5DwV0as3HUwK_nG3taD-Pez1rIz9NELqv5od60Q5equgexLntinyXJ6aof0jt6MZ68MFUOcYDVq0OjQ9d4c9-3rhwRLBjuPoZFzOF_4xhqWcLTiKwnO2RityY77Wc5nT_1p_ho5PV1nooRzV0Q-qSiDKolUceM6Xq-nJzE5HiDbjsx_PiZtN__AYtNFtg="

def decompress_string(compressed_string):
  compressed_string = compressed_string.encode('utf8')
  if compressed_string == "":
    return None
  try:
    actual_string = zlib.decompress(base64.urlsafe_b64decode(compressed_string))
  except (zlib.error, TypeError):
    print "Could not decode base64 zlib string %s" % (compressed_string)
    return None
  return actual_string
  
x = decompress_string(ttt).split(" ")

X = np.asarray(x).astype(np.int).tolist()

print(X)
